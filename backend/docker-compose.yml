services:
  # Main application service
  catalyst-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: catalyst-backend
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - LOG_LEVEL=INFO
      - DEBUG=false
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://catalyst_user:catalyst_password@postgres:5432/catalyst
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env.docker
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./storage:/app/storage
    networks:
      - catalyst-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: catalyst-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - catalyst-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
        reservations:
          memory: 128M
          cpus: "0.1"

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: catalyst-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=catalyst
      - POSTGRES_USER=catalyst_user
      - POSTGRES_PASSWORD=catalyst_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations
    networks:
      - catalyst-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catalyst_user -d catalyst"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: catalyst-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - catalyst-network
    restart: unless-stopped
    depends_on:
      catalyst-backend:
        condition: service_healthy
    profiles:
      - production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.25"
        reservations:
          memory: 64M
          cpus: "0.1"

networks:
  catalyst-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local
